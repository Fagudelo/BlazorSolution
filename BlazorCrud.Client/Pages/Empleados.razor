@page "/empleados"
@using BlazorCrud.Client.Services
@using BlazorCrud.Shared
@using CurrieTechnologies.Razor.SweetAlert2

@inject SweetAlertService SwAlert;
@inject IEmpleadoService empleadoService;


<h3>Empleados</h3>

<a class="btn btn-success btn-sm mb-3" href="empleado">Nuevo Empleado</a>

<table class="table">
    <thead>
        <tr>
            <th>Nombre Completo</th>
            <th>Departamento</th>
            <th>Sueldo</th>
            <th>Fecha Contrato</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (listaEmpleado == null)
        {
            <tr>
                <td colspan="5" align="center">
                    <img style="width:50px" src="" />
                </td>
            </tr>
        }
        else
        {
            @foreach (var item in listaEmpleado)
            {
                <tr>
                    <td>@item.NombreCompleto</td>
                    <td>@item.Departamento</td>
                    <td>@item.Sueldo</td>
                    <td>@item.FechaContrato</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="empleado/@item.IdEmpleado">
                            <i class="oi oi-pencil"></i>
                        </a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" onclick="(() => Eliminar(@item.IdEmpleado))">
                            <i class="oi oi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    List<EmpleadoDTO>? listaEmpleado = null;

    protected override async Task OnInitializedAsync()
    {
        listaEmpleado = await empleadoService.Lista();
    }

    private async Task Eliminar(int id)
    {
        var resultado = await SwAlert.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar empleado",
                Text = "Deseas elimanar empleado?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (resultado.IsConfirmed)
        {
            var eliminado = await empleadoService.Eliminar(id);

            if (eliminado)
            {
                listaEmpleado = listaEmpleado!.FindAll(e => e.IdEmpleado != id);
            }
        }
    }
}
